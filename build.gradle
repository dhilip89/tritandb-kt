version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.1.3'

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M4'
    }
}

apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'kotlin'

repositories {
    mavenCentral()
    jcenter()
}

jar {
    manifest {
        attributes 'Main-Class': 'com.tritandb.engine.server.StartServer'
    }

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }

    exclude('META-INF/*.SF')
    exclude('META-INF/*.DSA')
    exclude('META-INF/*.RSA')
}

//task execute(type:JavaExec) {
//    if(project.hasProperty('myargs')){
//        args(myargs.split(','))
//    }
//    main = mainClass
//    classpath = sourceSets.main.runtimeClasspath
//}

dependencies {

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect"
    compile "com.lmax:disruptor:3.3.6"
    compile 'com.google.protobuf:protobuf-java:3.3.0'
    compile 'com.natpryce:konfig:1.6.1.0'
    compile 'org.zeromq:jeromq:0.4.0'
    compile 'org.mapdb:mapdb:3.0.4'
    compile 'org.apache.jena:jena-arq:3.3.0'
    compile 'org.apache.jena:jena-core:3.3.0'
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.16'
    compile group: 'com.indeed', name: 'lsmtree-core', version: '1.0.7'
    compile 'com.github.jrachiele:timeseries:0.3'
//    compile group: 'org.scorexfoundation', name: 'iodb_2.12', version: '0.3.1'

    testCompile 'com.nhaarman:mockito-kotlin:1.4.0'
    testCompile "org.jetbrains.kotlin:kotlin-test"
    testCompile 'org.jetbrains.spek:spek-api:1.1.2'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.0.0-M4'
    testRuntime 'org.jetbrains.spek:spek-junit-platform-engine:1.1.2'
}
kotlin {
    experimental {
        coroutines "enable"
    }
}